<%@ Page Language="C#" MasterPageFile="~/Articles/Articles.master" AutoEventWireup="true" CodeFile="Status2.aspx.cs" Inherits="Articles_Status2" Title="Junior Tester. Статьи. Состояние багов..." %>

<asp:Content ID="Content1" ContentPlaceHolderID="head" Runat="Server">
    <meta name="description" content="Жизненный цикл разработки програмного обеспечения." />
    <meta name="keywords" content="web-тестирование, веб-тестирование, web, веб, тестирование, тест, бета-тестирование, програмное обеспечение, программы, тестер, web-тестер, веб-тестер, тестинг,софт,software test, бесплатно, начинающему вебтестеру, документация, стандарты, литература, ссылки, ресурсы для веб-тестера" />
</asp:Content>

<asp:Content ID="Content2" ContentPlaceHolderID="ContentPlaceHolderText" Runat="Server">
      <p class="name">Состояния багов.</p>
	<H3>Гущин Павел.</H3>
	<p class="text">В практике чаще всего используются следующие состояния багов:</p>
	<p class="text"><i>Unconfirmed</i> - баг только открыт и еще не был обработан. Когда тестер открывает баг, то первым информацию о нем получает некто по умолчанию (для разных тестируемых систем это может быть разные люди), читает его,  и переправляет это баг программисту, который непосредственно будет его исправлять.</p>
	<p class="text">Баг переходит в состояние <i>Assigned</i>. По мере работы, этот программист может переадресовать баг другому программисту, который, например, знает данную часть системы лучше. К сожалению, это порождает ситуации, когда баг "плутает" от одного разработчика к другому несколько месяцев.</p>
	<p class="text"><i>Assigned</i> - Конкретный программист получил этот баг и теперь должен отвечать "за базар" - исправлять свою или чужую ошибку.</p>
	<p class="text">В случае, если ошибка не является "ошибкой" (тестер ошибся) то баг превращается в <i>Resolved-Invalid</i> и переправляется тестеру обратно.</p>
	<p class="text">Если баг о той же проблеме уже есть, и над ним работают, то баг превращается в <i>Resolved-Duplication</i>. 
          Например, ошибка была описана ранее и была исправлена, но исправленный код еще не поступил к тестерам.</p>
	<p class="text">Когда программист ошибку исправил, то баг превращается в <i>Resolved-Fixed</i>. Сам программист эти состояния и выставляет.</p>
	<p class="text"><i>Resolved (Fixed, Invalid, Duplication)</i>- ошибка исправлена и возвращена тестерам для проверки.</p>
	<p class="text">Если баг в состоянии <i>Resolved-Invalid</i> то тестер обязан еще раз убедиться, ошибка была 
          или нет. Другими словами перетестировать.</p>
	<p class="text">Когда баг в состоянии  <i>Resolved-Duplication</i> то тестер должен убедиться, что действительно, 
          другой(ие), аналогичный(ые) баг(и) существует, его номер обычно программер 
          указывает в своем комментарии. Доверяй, но проверяй.</p>
	<p class="text">В случае, когда баг <i>Resolve-Fixed</i> тестер проверяет (тестирует проблему) опять. 
          Если ошибка исправлена - <i>Verified (Closed)</i>. Если ошибка не исправлена 
          - баг переоткрывается опять (<i>Unconfirmed, Assigned</i>)</p>
	<p class="text"><i>Verified</i>  ошибка исправлена и перетестирована на тестовой машине.</p>
	<p class="text"><i>Closed </i> - ошибка исправлена, перетестирована и исправленный код помещен на живую 
          систему, или новый билд выпущен.</p>
	<br />
</asp:Content>

