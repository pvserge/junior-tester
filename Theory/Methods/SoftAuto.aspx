<%@ Page Title="Junior Tester. Конспект. Методы. ПО для автоматизированного тестирования..." Language="C#" MasterPageFile="~/Theory/Methods/TheoryMethods.master" AutoEventWireup="true" CodeFile="SoftAuto.aspx.cs" Inherits="Theory_Methods_SoftAuto" %>

<asp:Content ID="Content1" ContentPlaceHolderID="head" Runat="Server">
    <meta name="description" content="Методики тестирования. Ручное тестирование." />
    <meta name="keywords" content="ручное тетирование, определение, бета-тестирование, програмное обеспечение, программы, тестер, бета-тестер, тестинг,софт,software test, бесплатно, начинающему бетатестеру, документация, стандарты, литература, ссылки, ресурсы для бета-тестера" />
</asp:Content>

<asp:Content ID="Content2" ContentPlaceHolderID="ContentPlaceHolderText" Runat="Server">
      <p class="name"><h4>Классификация ПО для автоматизированного тестирования.</h4></p>
      <p class="text">Существует целый 
        ряд специальных программ для проведения автоматизированного тестирования. 
        Ниже мы приводим примерную классификацию таких программ с указанием лишь 
        некоторых из них:</p>
      <ol class="decimal">
          <li>Продукты имитации 
            и обнаружения ошибок. Идентифицируют то, что не выявлено компиляторами 
            и отладчиками. Например, ошибки распределения памяти, выход массивов 
            за пределы области определения, неверное использование указателей, 
            контроль типов, обнаружение дефектных объектов и неверное указание 
            параметров. Эти продукты можно широко использовать на этапе альфа-тестирования. 
            (пакеты <a href="http://www.numega.com" target="_blank">BoundsChecker</a> 
            корпорации <a href="http://www.numega.com" target="_blank">NuMega 
            Technologies</a> и C++Expert компании CenterLine Software и др.).</li>
          <li>Инструменты 
            проверки графического интерфейса пользователя (GUI-тесты). Воздействуют 
            на приложения через их интерфейс по заранее написанным сценариям. 
            Они имитируют пользователя, часами работающего с клавиатурой и мышью, 
            проверяя целостность и логику интерфейса. ( Visual Test компании Microsoft, 
            Rational Visual Test и т.п.).</li>
          <li>Инструменты 
            тестирования программ под нагрузкой. Имитируют условия работы ПО с 
            тысячами пользователей, а так же позволяют проводить нагрузочные тесты 
            типа нехватки памяти и т.п., кроме того, они позволяют создать имитационную 
            среду (PurePerformix от Pure Software и др.).</li>
          <li>Анализаторы 
            дефектов. Выявляют ошибки на протяжении всего жизненного цикла (<a href="/Theory/LC/Default.aspx" target="_self">ЖЦРПО</a>), 
            а так же АВТОМАТИЧЕСКИ регистрируют обнаруженные ошибки в центральной 
            базе данных и классифицируют их по источнику, модулю, типу, степени 
            серьезности (Suite от SQA или Track от Soffront Software).</li>
      </ol>
      <p class="text">Таким образом, практически 
        по всем классам тестов существуют специальные программные продукты, позволяющие 
        автоматизировать процесс. Пользуйтесь только лицензионным софтом!</p>
	<br />
</asp:Content>

