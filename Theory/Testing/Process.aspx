<%@ Page Title="Junior Tester. Конспект. Процесс тестировнания." Language="C#" MasterPageFile="~/Theory/Testing/TheoryTesting.master" AutoEventWireup="true" CodeFile="Process.aspx.cs" Inherits="Theory_Testing_Process" %>

<asp:Content ID="Content1" ContentPlaceHolderID="head" Runat="Server">
    <meta name="description" content="Тестинг. Описание процесса тестирования." />
    <meta name="keywords" content="тестирование, тест, бета-тестирование, програмное обеспечение, программы, процесс тестирования, бета-тестер, тестинг,софт,software test, бесплатно, начинающему бетатестеру, документация, стандарты, литература, ссылки, ресурсы для бета-тестера" />
</asp:Content>

<asp:Content ID="Content2" ContentPlaceHolderID="ContentPlaceHolderText" Runat="Server">
      <p><H2>Введение.</H2></p>      
        <p class="text">Итак с чего начинать 
          тестирование? Прежде всего, необходимо получить всю документацию, которая 
          позволит Вам правильно составить план тестирования и разработать <a href="/Theory/Testing/TestCases.aspx" target="_self">Test 
          Cases</a>. Для этого Вам понадобятся: спецификация, технический проект 
          и т.п. На основании их составляется предварительный план тестирования 
          с указанием классов тестов и сроков их проведения, оценкой необходимого 
          дополнительного ПО, утилит и оборудования. Данный план обсуждается, 
          вносятся коррективы, на основе которых составляется окончательный план 
          тестирования. Важно, чтобы еще до начала разработки был определен словарь, 
          который позволял бы всем членам команды общаться на "одном языке".</p>
        <p class="text">Хотелось бы отметить, 
          что для успешной работы желательно, что бы тестер включался в процесс 
          разработки еще на начальных его этапах, активно привлекался к обсуждению 
          предстоящего проекта. Это обеспечит не только понимание сути проблемы, 
          но и сделает разрабатываемое ПО для тестировщика таким же "своим детищем" 
          как и для программиста. Безусловно, многое зависит от того, по какому 
          именно виду <a href="/Theory/LC/Default.aspx" target="_blank">ЖЦРПО </a>будет 
          осуществляться проектирование. Так же необходимо, что бы в процессе 
          составления плана при указании сроков тестирования, учитывалось время 
          на изучение необходимой документации, в т.ч. той, которая необходима 
          для теоретической подготовки по проблеме; написание документации необходимой 
          для тестирования; составления Test Cases; изучения необходимого дополнительного 
          программного обеспечения и утилит для тестирования; установку и настройку 
          ПО; изменения аппаратной конфигурации (приобретение нового и замену 
          старого оборудования) и т.д.</p>
        <p class="text">После утверждения 
          плана тестирования можно приступать к разработке Test Cases, по каждому 
          из проводимых классов тестов. По окончании их составления и утверждения, 
          замены оборудования, изучения необходимого ПО и документации можно приступать 
          к тестированию. Как правило, у разработчика будет достаточный срок, 
          чтобы подготовить к этому времени первую альфа-версию (или модуль) для 
          передачи на тестирование.</p>
        <p class="text">Далее начинается 
          ежедневная, рутинная работа тестировщика. Поведение Test Case, фиксация 
          результатов, описание багов, ведение базы, корректировка планов и т.п.</p>
        <p class="text">К сожалению, в реальной 
        жизни не все так гладко. Нередко возникаю ситуации, в которых казалось 
        бы уже "пойманный" баг при повторном прогоне того же самого Test Case 
        не проявляется. Более того, баг, который у Вас возникает стабильно, может 
        полностью отсутствовать у разработчика. Помните, что прежде чем вносить 
        баг в базу необходимо четко выявить условия, при которых он проявляется 
        стабильно.</p>
        <p><H2>Примерный план работы тестера.</H2></p>
        <p class="text">Подводя итоги сказанному 
          можно предложить следующий примерный план организации работы тестировщика 
          от начала разработки (общие положения):</p>
      <ol class="decimal">
        <li>Получение спецификации по разрабатываемому ПО.</li>
        <li>Получение технического проекта по разрабатываемому ПО.</li>
        <li>Составление на 
            основе полученных документов предварительного плана испытательных 
            работ (предварительного плана тестирования - см. раздел <a href="/Theory/Docs/Default.aspx">Документация</a>). 
            </li>
        <li>Обсуждение, составление в ходе его окончательного плана и его утверждение.</li>
        <li>Поиск дополнительных утилит необходимых для тестирования по плану и их освоение.</li>
        <li>Составление Test Cases. Обсуждение и принятие.</li>
        <li>Собственно тестирование:</li>
      </ol>
      <ul class="disc"> 
        <li>Ежедневное получение текущего задания.</li>
        <li>Ежедневная детализация полученного задания.</li>
        <li>Работа по плану.</li>
        <li>Перерыв.</li>
        <li>Работа по плану.</li>
        <li>Ежедневный отчет о проделанной работе (ведение базы по багам, 
          написание отчета, подготовка к отправке (упаковка, сверка версий), 
          отправка).</li>
      </ul>
      <br />
</asp:Content>

